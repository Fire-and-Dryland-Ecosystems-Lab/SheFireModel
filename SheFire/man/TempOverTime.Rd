% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TempOverTime.R
\name{TempOverTime}
\alias{TempOverTime}
\title{Temperature Over Time}
\usage{
TempOverTime(x, t = NULL, res = 1, model)
}
\arguments{
\item{x}{The soil depth (cm) for which to calculate temperature over time.}

\item{t}{To enter a time (min) for when to cut off the calculation (after starting at t=0.0001), use a single number for the cutoff time. Or, to set a time range (min) across which to calculate, use a vector of two numbers to designate the start and stop times. Default is t = NULL which will set the time range as the full model time period starting at time = 0.00001 (cannot have time = 0).}

\item{res}{The temporal resolution (in min) at which to calculate the temperatures. Default is one minute.}

\item{model}{The model object (a list) from the SheFire function containing the equations and data that comprise the model.}
}
\value{
Returns a list of the soil temperatures at each time interval (res) for the specified depth(x) over the specified time range (t).
}
\description{
This function takes the model created in the SheFire function and uses it to calculate the temperature over time for the user input depth. Until more validation experiments are run, it is not recommended that you use this model for soil depths deeper than 5 centimeters beyond the deepest sensor used to create the model. The function will print a warning if a deeper depth is entered.  The shallowest depth that can be calculated is set by the model and can accessed by model_object_name$Shallowest. This function will print an error message if input depth is too shallow. Note that in some cases, the shallowest depth that can mathematically be calculated by the model may be shallower than the shallowest depth that produces a reasonable prediction because near the soil surface, the temperatures become more extreme and difficult to model. This is a soil depth model, not a soil surface model. Plotting the temperature over time for a shallow depth of interest alongside a deeper depth (2 or 3 cm perhaps) is typically sufficient to visually determine if the shallow depth output is reasonable. A warning message will be printed for depths at or less than 0.5cm.
}
\details{
Example data from US Forest Service Fire Behavior Assessment Team: https://www.fs.fed.us/adaptivemanagement/reports/fbat/2019_FBATReport_WalkerFire_10112019_Final.pdf At least at the time of writing, all application functions in this package are based, in part, on this function.
}
\examples{
#standard use:
inputFile <- read.csv(file.path(system.file("external", package="SheFire"), "WalkerPlot4NE.csv")) #read in example data
model_example <- SheFire(input = inputFile )  #create model with all default settings

Depth4cm <- TempOverTime(x = 4, res = 1, model = model_example) #run function on model, t defaults to FullTime - full time range of model

#add model time to temp data
time <- seq(from = 0.00001, to = model_example$FullTime, by = 1) #model time technically starts at 0.00001 not 0 (because math reasons, sorry) you can probably ignore the 1/100000 of a minute if you wanted to, put temporal resolution (res) in "by" parameter
Depth4cmWithTime <- cbind(time, Depth4cm)
colnames(Depth4cmWithTime) <- c("Time", "Temperature")

#connect temp data to real time:
StartTime.formatted <- parse_date_time(model_example$StartTime, "dmy HM") #lubridate pkg. parse StartTime into time format, "dmy HM" is the input format
Time <- StartTime.formatted  #initialize Time at beginning of time for Depth4cm
for (a in seq(length(1:model_example$FullTime)-1)){  #for each row (time point) in table of temps (1 per minute, res = 1), -1 because starts with Time already in next line
  Time <- c(Time, StartTime.formatted + 60*a)  #add one minute (60 sec) to StartTime 
}
Depth4WithRealTime <- cbind(as.character(Time), Depth4cm) #table of times and corresponding temps
colnames(Depth4WithRealTime) <- c("Time", "Temperature")
head(Depth4WithRealTime)

#example of applying function to multiple depths at once and plotting:
##make a table with temps for all depths:
depths <- c(1, 2, 3, 4, 5)
multiple.depths <- sapply(X=depths, FUN=TempOverTime, model = model_example) #default t and res
colnames(multiple.depths) <- lapply(X=depths, FUN=function(X)paste0("Depth", X, "cm"))
##for plotting
AllTemps <- c(multiple.depths[,1], multiple.depths[,2], multiple.depths[,3],multiple.depths[,4],multiple.depths[,5])
Type <- c(rep("Depth1cm", nrow(multiple.depths)), rep("Depth2cm", nrow(multiple.depths)), rep("Depth3cm", nrow(multiple.depths)), rep("Depth4cm", nrow(multiple.depths)), rep("Depth5cm", nrow(multiple.depths))) #grouping variable for plot
TimeCount <- seq(nrow(multiple.depths))  #don't forget to multiply by res if temporal resolution is not 1 min
ToPlot <- data.frame(TimeCount, AllTemps, Type)
ggplot(ToPlot, aes(x=TimeCount, y=AllTemps)) +
  geom_line(aes(color = Type), size = 1) +
  labs(x = "Time (min)", y = "Temp (C)", title = "Temperature over time")
}
\seealso{
\code{\link{SheFire}}
}
\author{
MaryKBrady
}
\keyword{Fire,}
\keyword{Soil,}
\keyword{Temperature}
